{"version":3,"sources":["components/navbar/nav.jsx","components/calculator/score_dropdown.jsx","components/calculator/calculator_form.jsx","components/calculator/result.jsx","components/calculator/calc_wrapper.jsx","components/footer/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","nav","react_default","a","createElement","className","React","Component","ScoreDropdown","name","value","this","props","currentScore","onChange","onUpdateScore","id","CalculatorForm","onSubmit","submit","htmlFor","type","placeholder","autoFocus","defaultChecked","onInput","annualText","min","max","step","defaultValue","annualSlider","downText","downSlider","score_dropdown","state","formData","score","updateScore","Result","commas","Math","round","annualIncome","monthlyDebt","parseInt","downPayment","inflation","savings","onClick","reset","Calc","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","handleReset","handleAnnualSlider","handleAnnualText","handleDownSlider","handleDownText","numberWithCommas","pageType","maritalStatus","insurance","fees","e","setState","target","preventDefault","document","querySelector","getElementById","x","parts","toString","split","replace","join","toLocaleString","displayPage","calculator_form","result","Footer","App","navbar_nav","calc_wrapper","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c773fd60.chunk.js","sourcesContent":["import React from 'react';\nimport '../../stylesheets/nav.css';\n\nclass NavBar extends React.Component {\n\n  render() {\n    let nav = (\n      <div>\n        <div className=\"navbar\">\n          <div className=\"logo-wrapper\">\n            <div className=\"logo\"></div>\n            <div className=\"nav-elements-wrapper\">\n              <div className=\"nav-elements\">Calculator</div>\n            </div>\n          </div>\n          <div className=\"profile-wrapper\">\n            Steven L.\n            <div className=\"profile-image\"></div>\n          </div>\n        </div>\n      </div>\n    )\n\n    return (\n      <div>\n        {nav}\n      </div>\n    )\n  }\n}\n\nexport default NavBar;\n\n","import React from 'react';\n\nclass ScoreDropdown extends React.Component {\n  render() {\n    return(\n      <div className=\"styled-select semi-square\">\n        <select name=\"credit-score\" value={this.props.currentScore} onChange={this.props.onUpdateScore} id=\"creditScore\">\n          <option value=\"760\">Excellent (760+)</option>\n          <option value=\"740\">Excellent (740-759)</option>\n          <option value=\"720\">Very Good (720-739)</option>\n          <option value=\"700\">Good (700-719)</option>\n          <option value=\"680\">Above Average (680-699)</option>\n          <option value=\"660\">Average (660-679)</option>\n          <option value=\"640\">Fair (640-659)</option>\n          <option value=\"620\">Needs Improvement (620-639)</option>\n          <option value=\"580\">Poor (580-619)</option>\n          <option value=\"579\">Poor (Below 580)</option>\n        </select>\n      </div>\n    )\n  }\n}\n\nexport default ScoreDropdown;","import React from 'react';\n\nimport ScoreDropdown from \"./score_dropdown\";\n\nclass CalculatorForm extends React.Component {\n  render() {\n    return(\n      <div className=\"header-calc-wrapper\">\n        <div className=\"header-title\">\n          <h1>What kind of home can I buy?</h1>\n        </div>\n        <div className=\"nav-calc\">\n          <form onSubmit={this.props.submit} className=\"form-wrapper\">\n            <div className=\"calc-wrapper\">\n              <div className=\"section-sizing\">\n                <div className=\"header\">\n                  <span>Details</span>\n                </div>\n                <div className=\"section-inside\">\n                  <div className=\"spacing\">\n                    <label htmlFor=\"location\">Location</label>\n                    <input id=\"location\" type=\"text\" placeholder=\"City, State\" autoFocus />\n                  </div>\n                  <div className=\"spacing\">\n                    <p>Marital Status</p>\n                    <div className=\"marital-radio-spacing\" id=\"marital\">\n                      <input type=\"radio\" name=\"marital-status\" value=\"single\" id=\"single\" defaultChecked />\n                      <label htmlFor=\"single\">Single</label>\n                      <input type=\"radio\" name=\"marital-status\" value=\"married\" id=\"married\" />\n                      <label htmlFor=\"married\">Married</label>\n                    </div>\n                  </div>\n                  <div className=\"spacing\">\n                    <label htmlFor=\"annual-income\">Annual Income</label>\n                    <div className=\"slider-wrapper\" id=\"annual-income\">\n                      <span className=\"dollar\"><input type=\"text\" id=\"annualRange\" onInput={this.props.annualText} min=\"0\" max=\"1000000\" placeholder=\"0\" /></span>\n                      <input type=\"range\" min=\"0\" max=\"1000000\" step=\"1000\" defaultValue=\"0\" onInput={this.props.annualSlider} id=\"annualR\" />\n                    </div>\n                  </div>\n                  <div className=\"spacing\">\n                    <label htmlFor=\"down-payment\">Down Payment</label>\n                    <div className=\"slider-wrapper\" id=\"down-payment\">\n                      <span className=\"dollar\"><input type=\"text\" id=\"downRange\" onInput={this.props.downText} min=\"0\" max=\"10000000\" placeholder=\"0\" /></span>\n                      <input type=\"range\" min=\"0\" max=\"10000000\" step=\"5000\" defaultValue=\"0\" onInput={this.props.downSlider} id=\"downR\" />\n                    </div>\n                  </div>\n                  <div className=\"spacing\">\n                    <label htmlFor=\"monthlyDebt\">Monthly Debt</label>\n                    <span className=\"dollar\"><input type=\"text\" placeholder=\"0\" id=\"monthlyDebt\" /></span>\n                  </div>\n                  <div className=\"spacing\">\n                    <label htmlFor=\"creditScore\">Credit Score</label>\n                    <ScoreDropdown currentScore={this.props.state.formData.score} onUpdateScore={this.props.updateScore} />\n                  </div>\n                </div>\n              </div>\n              <div className=\"section-sizing\">\n                <div className=\"header\">\n                  <span>Advanced</span>\n                </div>\n                <div className=\"section-inside\">\n                  <div className=\"spacing\">\n                    <label htmlFor=\"insurance\">Annual Homeowner's Insurance</label>\n                    <span className=\"percentage\"><input type=\"text\" placeholder=\"0\" id=\"insurance\" /></span>\n                  </div>\n                  <div className=\"spacing\">\n                    <label htmlFor=\"fees\">Monthly HOA / Condo Fees</label>\n                    <span className=\"dollar\"><input type=\"text\" placeholder=\"0\" id=\"fees\" /></span>\n                  </div>\n                  <div className=\"spacing\">\n                    <label htmlFor=\"inflation\">Annual General Inflation</label>\n                    <span className=\"percentage\"><input type=\"text\" defaultValue=\"2\" id=\"inflation\" /></span>\n                  </div>\n                  <div className=\"spacing\">\n                    <label htmlFor=\"savings\">Annual Rate of Return on Savings</label>\n                    <span className=\"percentage\"><input type=\"text\" defaultValue=\"4\" id=\"savings\" /></span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"format-button\">\n              <input className=\"button-blue\" type=\"submit\" value=\"Calculate\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CalculatorForm;","import React from 'react';\n\nclass Result extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"header-calc-wrapper\">\n          <div className=\"nav-calc\">\n            <div className=\"calc-wrapper\">\n              <span className=\"result-header\">\n                You can afford a $\n                {this.props.commas(\n                  Math.round(this.props.formData.annualIncome * 2.5)\n                )}{\" \"}\n                home!\n              </span>\n              <div className=\"result-section-sizing\">\n                <div className=\"header\">\n                  <span>Mortgage Payment</span>\n                  <span>\n                    $\n                    {this.props.commas(\n                      Math.round(\n                        this.props.formData.annualIncome * 2.5 * 0.0055\n                      )\n                    )}\n                  </span>\n                </div>\n                <div className=\"section-inside\">\n                  <div className=\"spacing\">\n                    <p>Estimated Other Costs</p>\n                    <p>${this.props.commas(this.props.formData.monthlyDebt)}</p>\n                  </div>\n                  <div className=\"spacing\">\n                    <p>Total Payment</p>\n                    <p>\n                      $\n                      {this.props.commas(\n                        Math.round(\n                          parseInt(this.props.formData.annualIncome * 2.5 * 0.0055) + \n                          parseInt(this.props.formData.monthlyDebt)\n                        )\n                      )}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"result-section-sizing\">\n                <div className=\"header\">\n                  <span>Down Payment</span>\n                  <span>${this.props.commas(this.props.formData.downPayment)}</span>\n                </div>\n                <div className=\"section-inside\">\n                  <div className=\"spacing\">\n                    <p>Closing Costs</p>\n                    <p>\n                      ${this.props.commas(Math.round(this.props.formData.downPayment / 2))}\n                    </p>\n                  </div>\n                  <div className=\"spacing\">\n                    <p>Cash Reserve</p>\n                    <p>\n                      ${this.props.commas(Math.round(this.props.formData.downPayment / 3))}\n                    </p>\n                  </div>\n                  <hr />\n                  <div className=\"spacing\">\n                    <p>Recommended Savings</p>\n                    <p>\n                      $\n                      {this.props.commas(\n                        parseInt(this.props.formData.downPayment) +\n                          parseInt(\n                            Math.round(this.props.formData.downPayment / 2)\n                          ) +\n                          parseInt(\n                            Math.round(this.props.formData.downPayment / 3)\n                          )\n                      )}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"result-section-sizing round-bottom\">\n                <div className=\"header\">\n                  <span>Mortgage Amount</span>\n                  <span>${this.props.commas(\n                    Math.round(\n                      parseInt(this.props.formData.annualIncome * 2.5) - \n                      parseInt(this.props.formData.downPayment)\n                    )\n                  )}</span>\n                </div>\n                <div className=\"section-inside\">\n                  <div className=\"spacing\">\n                    <p>Type</p>\n                    <p>30 yr Fixed FHA</p>\n                  </div>\n                  <div className=\"spacing\">\n                    <p>Interest</p>\n                    <p>{this.props.formData.inflation}%</p>\n                  </div>\n                  <div className=\"spacing\">\n                    <p>APR</p>\n                    <p>{this.props.formData.savings}%</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"format-button\">\n          <button className=\"button-blue\" onClick={this.props.reset}>Reset</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Result;","import React from 'react';\n\nimport Calculator from './calculator_form';\nimport Result from './result';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Calc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.onUpdateScore = this.onUpdateScore.bind(this);\n    this.handleAnnualSlider = this.handleAnnualSlider.bind(this);\n    this.handleAnnualText = this.handleAnnualText.bind(this);\n    this.handleDownSlider = this.handleDownSlider.bind(this);\n    this.handleDownText = this.handleDownText.bind(this);\n    this.numberWithCommas = this.numberWithCommas.bind(this);\n    this.state = {\n      pageType: 'calc',\n      formData: {\n        maritalStatus: 'single',\n        annualIncome: '0',\n        downPayment: '0',\n        monthlyDebt: '0',\n        score: '0',\n        insurance: '0',\n        fees: '0',\n        inflation: '2',\n        savings: '4'\n      },\n    };\n  }\n\n  onUpdateScore(e) {\n    this.setState({\n      formData: {\n        score: e.target.value\n      }\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({ \n      pageType: 'result',\n      formData: {\n        maritalStatus: document.querySelector('input[name=\"marital-status\"]:checked').value,\n        annualIncome: document.getElementById(\"annualR\").value,\n        downPayment: document.getElementById(\"downR\").value,\n        monthlyDebt: document.getElementById(\"monthlyDebt\").value,\n        score: document.getElementById(\"creditScore\").value,\n        insurance: document.getElementById(\"insurance\").value,\n        fees: document.getElementById(\"fees\").value,\n        inflation: document.getElementById(\"inflation\").value,\n        savings: document.getElementById(\"savings\").value,\n      }\n    })\n  }\n\n  handleReset(e) {\n    e.preventDefault();\n    this.setState({\n      pageType: 'calc',\n      formData: {\n\n      }\n    })\n  }\n\n  numberWithCommas(x) {\n    let parts = x.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n  }\n\n  handleAnnualSlider() {\n    document.getElementById(\"annualRange\").value = this.numberWithCommas(document.getElementById(\"annualR\").value);\n  }\n\n  handleAnnualText() {\n    document.getElementById(\"annualR\").value = document.getElementById(\"annualRange\").value.toLocaleString();\n  }\n\n  handleDownSlider() {\n    document.getElementById(\"downRange\").value = this.numberWithCommas(document.getElementById(\"downR\").value);\n  }\n\n  handleDownText() {\n    document.getElementById(\"downR\").value = document.getElementById(\"downRange\").value;\n  }\n\n  render() {\n    let displayPage;\n    if (this.state.pageType === 'calc') {\n      displayPage = <Calculator submit={this.handleSubmit} annualSlider={this.handleAnnualSlider} annualText={this.handleAnnualText} downSlider={this.handleDownSlider} downText={this.handleDownText} updateScore={this.onUpdateScore} state={this.state}/>\n      \n    } else if (this.state.pageType === 'result'){\n      displayPage = <Result formData={this.state.formData} commas={this.numberWithCommas} reset={this.handleReset}/>\n    }\n    return (\n      <div>\n        {displayPage}\n      </div>\n    );\n  }\n}\n\nexport default Calc;","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return(\n      <div className=\"footer-wrapper\">\n        <label>FISCAL HIVE ASSIGNMENT 2019</label>\n        <div>\n          <label className=\"dont-click\">ABOUT FISCAL HIVE | </label>\n          <label className=\"dont-click\">PRIVACY POLICY | </label>\n          <label className=\"dont-click\">TERMS & CONDITIONS | </label>\n          <label className=\"dont-click\">CONTACT US | </label>\n          <label className=\"dont-click\">PRESS ENQUIRES</label>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\n\nimport NavBar from './components/navbar/nav';\nimport Calc from './components/calculator/calc_wrapper';\nimport Footer from './components/footer/footer';\n\nfunction App() {\n  return (\n    <div>\n      <nav>\n        <NavBar />\n      </nav>\n      <main>\n        <Calc />\n      <footer>\n        <Footer />\n      </footer>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}